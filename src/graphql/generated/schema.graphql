"""Events microservice"""
schema {
  query: Query
  mutation: Mutation
}

type Query {
  users(pagination: Pagination, filter: GetUsersMutationInput): GetUsersQueryResponse
}

type GetUsersQueryResponse {
  data: users
  index: Int
  status: EventsResponseStatus!
}

type users {
  users: [User]
}

type User {
  id: ID!
  name: String!
}

type EventsResponseStatus {
  success: Boolean!
  reason: String
}

input Pagination {
  index: Int!
  limit: Int!
}

input GetUsersMutationInput {
  name: String!
}

type Mutation {
  createUser(input: CreateUserMutationInput): CreateUserMutationResponse
}

type CreateUserMutationResponse {
  data: CreateUser
  status: EventsResponseStatus!
}

type CreateUser {
  user: User
}

input CreateUserMutationInput {
  name: String!
}